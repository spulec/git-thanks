#!/usr/bin/python

import getopt, smtplib, sys, os, urllib, json
from email.MIMEMultipart import MIMEMultipart
from email.MIMEText import MIMEText
from subprocess import call

EMAIL_SERVER = "smtp.gmail.com"
EMAIL_PORT = 587

EMAIL_USERNAME = "user@gmail.com"
EMAIL_PASSWORD = "password"

GITHUB_USER_API_URL = "http://github.com/api/v2/json/user/show/"


def main():
    message = """
        I just wanted to send you a quick note and
        and thank you for the work you have done on
        this project. It has made my life easier.
        """

    try:
        opts, args = getopt.getopt(sys.argv[1:], "m:")
    except getopt.GetoptError, err:
        print str(err)
        usage()
        sys.exit(2)

    for o, a in opts:
        if o == "-m":
            message = a

    (user, project) = get_info_from_config()
    if not user or not project:
        print "No remote source was found. Are you sure this is a Github project?"
        sys.exit(1)

    email = get_email_from_user(user)
    if not email:
        print "No email could be found for this user."
        sys.exit(1)
    
    send_mail(message, email, project)


def get_info_from_config():
    config = get_config()
    for line in config:
        if line.strip().startswith("url"):
            email = line.split(":")[1].split("/")[0]
            project = line.split("/")[-1].split(".")[0]
            return (email, project)
    return (None, None)

def get_config():
    path = ".git/config"
    while 1:
        if os.path.isfile(path):
            return open(path, "r")
        else:
            (parent, slash, cwd) = os.getcwd().rpartition("/")
            if parent == "":
                print "You are not in a git working directory"
                sys.exit(1)
            os.chdir(parent)

def get_email_from_user(user):
    json_response = urllib.urlopen(GITHUB_USER_API_URL + user).read()
    response = json.loads(json_response)
    if response.has_key('user') and response['user'].has_key('email'):
        return response['user']['email']
    else:
        return None


def send_mail(body, email, project):
    msg = MIMEMultipart()
    msg['From'] = EMAIL_USERNAME
    msg['To'] = email
    msg['Subject'] = "Thanks for " + project 
    msg.attach(MIMEText(body, 'plain'))
    
    server = smtplib.SMTP(EMAIL_SERVER, EMAIL_PORT)
    server.starttls()
    server.login(EMAIL_USERNAME, EMAIL_PASSWORD)
    server.sendmail(email, EMAIL_USERNAME, msg.as_string())
    server.quit()

if __name__ == "__main__":
    main()
